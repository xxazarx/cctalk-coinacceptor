package com.xazar.device.cctalk;

public enum CCTalkMessageHeader {
    FACTORY_SET_UP_AND_TEST(255),
    SIMPLE_POLL(254),
    ADDRESS_POLL(253),
    ADDRESS_CLASH(252),
    ADDRESS_CHANGE(251),
    ADDRESS_RANDOM(250),
    REQUEST_POLLING_PRIORITY(249),
    REQUEST_STATUS(248),
    REQUEST_VARIABLE_SET(247),
    REQUEST_MANUFACTURER_ID(246),
    REQUEST_EQUIPMENT_CATEGORY_ID(245),
    REQUEST_PRODUCT_CODE(244),
    REQUEST_DATABASE_VERSION(243),
    REQUEST_SERIAL_NUMBER(242),
    REQUEST_SOFTWARE_REVISION(241),
    TEST_SOLENOIDS(240),
    OPERATE_MOTORS(239),
    TEST_OUTPUT_LINES(238),
    READ_INPUT_LINES(237),
    READ_OPTO_STATES(236),
    READ_LAST_CREDIT_OR_ERROR_CODE(235),
    ISSUE_GUARD_CODE(234),
    LATCH_OUTPUT_LINES(233),
    PERFORM_SELF_CHECK(232),
    MODIFY_INHIBIT_STATUS(231),
    REQUEST_INHIBIT_STATUS(230),
    READ_BUFFERED_CREDIT_OR_ERROR_CODES(229),
    MODIFY_MASTER_INHIBIT_STATUS(228),
    REQUEST_MASTER_INHIBIT_STATUS(227),
    REQUEST_INSERTION_COUNTER(226),
    REQUEST_ACCEPT_COUNTER(225),
    DISPENSE_COINS(224),
    DISPENSE_CHANGE(223),
    MODIFY_SORTER_OVERRIDE_STATUS(222),
    REQUEST_SORTER_OVERRIDE_STATUS(221),
    ONE_SHOT_CREDIT(220),
    ENTER_NEW_PIN_NUMBER(219),
    ENTER_PIN_NUMBER(218),
    REQUEST_PAYOUT_HIGH_LOW_STATUS(217),
    REQUEST_DATA_STORAGE_AVAILABILITY(216),
    READ_DATA_BLOCK(215),
    WRITE_DATA_BLOCK(214),
    REQUEST_OPTION_FLAGS(213),
    REQUEST_COIN_POSITION(212),
    POWER_MANAGEMENT_CONTROL(211),
    MODIFY_SORTER_PATHS(210),
    REQUEST_SORTER_PATHS(209),
    MODIFY_PAYOUT_ABSOLUTE_COUNT(208),
    REQUEST_PAYOUT_ABSOLUTE_COUNT(207),
    EMPTY_PAYOUT(206),
    REQUEST_AUDIT_INFORMATION_BLOCK(205),
    METER_CONTROL(204),
    DISPLAY_CONTROL(203),
    TEACH_MODE_CONTROL(202),
    REQUEST_TEACH_STATUS(201),
    UPLOAD_COIN_DATA(200),
    CONFIGURATION_TO_EEPROM(199),
    COUNTERS_TO_EEPROM(198),
    CALCULATE_ROM_CHECKSUM(197),
    REQUEST_CREATION_DATE(196),
    REQUEST_LAST_MODIFICATION_DATE(195),
    REQUEST_REJECT_COUNTER(194),
    REQUEST_FRAUD_COUNTER(193),
    REQUEST_BUILD_CODE(192),
    KEYPAD_CONTROL(191),
    REQUEST_PAYOUT_STATUS(190),
    MODIFY_DEFAULT_SORTER_PATH(189),
    REQUEST_DEFAULT_SORTER_PATH(188),
    MODIFY_PAYOUT_CAPACITY(187),
    REQUEST_PAYOUT_CAPACITY(186),
    MODIFY_COIN_ID(185),
    REQUEST_COIN_ID(184),
    UPLOAD_WINDOW_DATA(183),
    DOWNLOAD_CALIBRATION_INFO(182),
    MODIFY_SECURITY_SETTING(181),
    REQUEST_SECURITY_SETTING(180),
    MODIFY_BANK_SELECT(179),
    REQUEST_BANK_SELECT(178),
    HANDHELD_FUNCTION(177),
    REQUEST_ALARM_COUNTER(176),
    MODIFY_PAYOUT_FLOAT(175),
    REQUEST_PAYOUT_FLOAT(174),
    REQUEST_THERMISTOR_READING(173),
    EMERGENCY_STOP(172),
    REQUEST_HOPPER_COIN(171),
    REQUEST_BASE_YEAR(170),
    REQUEST_ADDRESS_MODE(169),
    REQUEST_HOPPER_DISPENSE_COUNT(168),
    DISPENSE_HOPPER_COINS(167),
    REQUEST_HOPPER_STATUS(166),
    MODIFY_VARIABLE_SET(165),
    ENABLE_HOPPER(164),
    TEST_HOPPER(163),
    MODIFY_INHIBIT_AND_OVERRIDEREGISTERS(162),
    PUMP_RNG(161),
    REQUEST_CIPHER_KEY(160),
    READ_BUFFERED_BILL_EVENTS(159),
    MODIFY_BILL_ID(158),
    REQUEST_BILL_ID(157),
    REQUEST_COUNTRY_SCALING_FACTOR(156),
    REQUEST_BILL_POSITION(155),
    ROUTE_BILL(154),
    MODIFY_BILL_OPERATING_MODE(153),
    REQUEST_BILL_OPERATING_MODE(152),
    TEST_LAMPS(151),
    REQUEST_INDIVIDUAL_ACCEPT_COUNTER(150),
    REQUEST_INDIVIDUAL_ERROR_COUNTER(149),
    READ_OPTO_VOLTAGES(148),
    PERFORM_STACKER_CYCLE(147),
    OPERATE_BI_DIRECTIONAL_MOTORS(146),
    REQUEST_CURRENCY_REVISION(145),
    UPLOAD_BILL_TABLES(144),
    BEGIN_BILL_TABLE_UPGRADE(143),
    FINISH_BILL_TABLE_UPGRADE(142),
    REQUEST_FIRMWARE_UPGRADE_CAPABILITY(141),
    UPLOAD_FIRMWARE(140),
    BEGIN_FIRMWARE_UPGRADE(139),
    FINISH_FIRMWARE_UPGRADE(138),
    SWITCH_ENCRYPTION_CODE(137),
    STORE_ENCRYPTION_CODE(136),
    SET_ACCEPT_LIMIT(135),
    DISPENSE_HOPPER_VALUE(134),
    REQUEST_HOPPER_POLLING_VALUE(133),
    EMERGENCY_STOP_VALUE(132),
    REQUEST_HOPPER_COIN_VALUE(131),
    REQUEST_INDEXED_HOPPER_DISPENSE_COUNT(130),
    READ_BARCODE_DATA(129),
    REQUEST_MONEY_IN(128),
    REQUEST_MONEY_OUT(127),
    CLEAR_MONEY_COUNTERS(126),
    PAY_MONEY_OUT(125),
    VERIFY_MONEY_OUT(124),
    REQUEST_ACTIVITY_REGISTER(123),
    REQUEST_ERROR_STATUS(122),
    PURGE_HOPPER(121),
    MODIFY_HOPPER_BALANCE(120),
    REQUEST_HOPPER_BALANCE(119),
    MODIFY_CASHBOX_VALUE(118),
    REQUEST_CASHBOX_VALUE(117),
    MODIFY_REAL_TIME_CLOCK(116),
    REQUEST_REAL_TIME_CLOCK(115),
    REQUEST_USB_ID(114),
    SWITCH_BAUD_RATE(113),
    READ_ENCRYPTED_EVENTS(112),
    REQUEST_ENCRYPTION_SUPPORT(111),
    SWITCH_ENCRYPTION_KEY(110),
    REQUEST_ENCRYPTED_HOPPER_STATUS(109),
    REQUEST_ENCRYPTED_MONETARY_ID(108),
    EXPANSION_HEADER_4(103),
    EXPANSION_HEADER_3(102),
    EXPANSION_HEADER_2(101),
    EXPANSION_HEADER_1(100),
    BUSY_MESSAGE(006),
    NAK_MESSAGE(005),
    REQUEST_COMMS_REVISION(004),
    CLEAR_COMMS_STATUS_VARIABLES(003),
    REQUEST_COMMS_STATUS_VARIABLES(002),
    RESET_DEVICE(001),
    RETURN_MESSAGE(000);

    private byte value;

    CCTalkMessageHeader(int value) {
        this.value = (byte) (0xFF & value);
    }

    public byte getValue() {
        return value;
    }

    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(this.name());
        sb.append('(');
        byte valCopy = value;
        for (int i = 0; i < 8; i++) {
            sb.append((valCopy & 128) == 0 ? 0 : 1);
            valCopy <<= 1;
        }
        sb.append(')');
        return sb.toString();
    }

    public static CCTalkMessageHeader valueOf(byte b) {
        for (CCTalkMessageHeader h : CCTalkMessageHeader.values()) {
            if (h.value == b) {
                return h;
            }
        }
        return null;
    }
}
